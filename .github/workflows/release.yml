name: Build/release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    env:
      ELECTRON_BUILDER_HTTP_TIMEOUT: 6000000
      ELECTRON_MIRROR: "https://npmmirror.com/mirrors/electron/"
      GH_TOKEN: ${{ secrets.TOKEN }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14(macos-latest) is apple silicon
        os: [macos-latest, windows-latest, macos-13]
        include:
          - os: windows-latest
            cuda_version: '12.8.1'
          - os: windows-latest
            cuda_version: '11.8.0'

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Prepare CUDA 11.8 files
        if: matrix.os == 'windows-latest' && matrix.cuda_version == '11.8.0'
        run: |
          Remove-Item -Path "extraResources/addons/win-x64-cuda/addon.node" -Force
          Copy-Item -Path "extraResources/addons/win-x64-cuda11.8/addon.node" -Destination "extraResources/addons/win-x64-cuda/addon.node"
          Remove-Item -Path "extraResources/addons/win-x64-cuda11.8" -Recurse -Force

      - name: Build/release Electron app - Windows CUDA
        uses: samuelmeuli/action-electron-builder@v1.6.0
        if: matrix.os == 'windows-latest'
        env:
          CUDA_VERSION: ${{ matrix.cuda_version }}
        with:
          github_token: ${{ secrets.TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          max_attempts: 5

      - name: Build/release Electron app - MacOS Intel
        uses: samuelmeuli/action-electron-builder@v1.6.0
        if: matrix.os == 'macos-13'
        with:
          args: "--x64"
          github_token: ${{ secrets.TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build/release Electron app - MacOS Arm
        uses: samuelmeuli/action-electron-builder@v1.6.0
        if: matrix.os == 'macos-latest'
        with:
          args: "--arm64"
          github_token: ${{ secrets.TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
